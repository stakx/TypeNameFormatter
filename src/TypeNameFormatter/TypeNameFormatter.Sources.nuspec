<?xml version="1.0" encoding="utf-8" ?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">

  <metadata minClientVersion="2.8">
    <id>TypeNameFormatter.Sources</id>
    <title>TypeNameFormatter</title>
    <version>1.1.1</version>
    <summary>A small .NET library for formatting type names à la C#.</summary>
    <description>TypeNameFormatter provides some extension methods that can be used instead of Type.ToString() to format a type's name the way it would look in C#:

* StringBuilder.AppendFormattedName(Type, [TypeNameFormatOptions])
* Type.GetFormattedName([TypeNameFormatOptions])

See the README at the project's GitHub repository for usage instructions.

This package is a source code distribution of this library. It gets embedded into the referencing project and thus does not introduce an additional package reference for downstream consumers.</description>
    <authors>stakx</authors>
    <projectUrl>https://github.com/stakx/TypeNameFormatter</projectUrl>
    <copyright>Copyright (c) 2018-2021 stakx</copyright>
    <licenseUrl>https://github.com/stakx/TypeNameFormatter/blob/main/LICENSE.md</licenseUrl>
    <iconUrl>https://github.com/stakx/TypeNameFormatter/raw/main/assets/icon-64x64.png</iconUrl>
    <releaseNotes>A changelog is available at https://github.com/stakx/TypeNameFormatter/blob/main/CHANGELOG.md.</releaseNotes>
    <developmentDependency>true</developmentDependency>
    <tags>reflection types formatting string c#</tags>
  </metadata>

  <files>
    <file src="TypeNameFormatter.cs" target="build"/>
    <file src="TypeNameFormatter.Nullable.cs" target="build"/>
    <file src="TypeNameFormatter.Sources.targets" target="build"/>
  </files>

</package>
